plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id('io.ktor.plugin') version '2.3.10'
    id('org.jetbrains.kotlin.plugin.serialization') version '1.9.23'
}

group = 'org.ecgproject'
version = '1.0.1'

// Java version 8
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation("io.ktor:ktor-server-tests-jvm")
    // ktor deps
    implementation("io.ktor:ktor-server-core-jvm")
    implementation("io.ktor:ktor-serialization-kotlinx-json-jvm")
    implementation("io.ktor:ktor-server-content-negotiation-jvm")
    implementation("org.jetbrains.exposed:exposed-core:0.41.1")
    implementation("org.jetbrains.exposed:exposed-jdbc:0.41.1")
    implementation("com.h2database:h2:2.1.214")
    implementation("io.ktor:ktor-server-resources")
    implementation("io.ktor:ktor-server-auth-jvm")
    implementation("io.ktor:ktor-server-netty-jvm")
    implementation("io.ktor:ktor-serialization-jackson:$ktor_version")
    implementation("io.ktor:ktor-serialization-kotlinx-json:$ktor_version")

    implementation("ch.qos.logback:logback-classic:$logback_version")
    implementation("io.github.cdimascio:dotenv-java:2.2.0")
    implementation("org.xerial:sqlite-jdbc:3.34.0")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("io.github.cdimascio:dotenv-java:2.2.0")
}

test {
    useJUnitPlatform()
}
kotlin {
    jvmToolchain(8)
}

jar {
    duplicatesStrategy = 'exclude'

    manifest {
        attributes 'Main-Class': 'org.ecgproject.MainKt'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}